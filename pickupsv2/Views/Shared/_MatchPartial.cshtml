@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> uManager
@model Match
@{var match = Model;}

@if (match.Players.Count == 10)
{
    <div match-id="@match.id" class="row text-center match-container" style="background-image: url('/img/maps/@(match.Map).png');">
        <div class="match-header">
            <h3>@Html.DisplayFor(modelItem => match.Map) - <span class="match-player-count">@Html.DisplayFor(modelItem => match.Players.Count)</span> / 10</h3>
            @if (User.Identity.IsAuthenticated)
            {
                var curUser = uManager.GetUserId(User);
                if (Guid.Parse(uManager.GetUserId(User)) == match.Admin)
                {
                    <button class="end-match btn">End Match</button>
                }
            }
            @{
                Player[] teamA = new Player[5];
                Player[] teamB = new Player[5];
                Random rand = new Random(match.id.GetHashCode());
                for (int i = 0; i < 5; i++)
                {
                    int randomSpot = rand.Next(match.Players.Count);
                    teamA[i] = match.Players.ElementAt(randomSpot);
                    match.Players.RemoveAt(randomSpot);

                    randomSpot = rand.Next(match.Players.Count);
                    teamB[i] = match.Players.ElementAt(randomSpot);
                    match.Players.RemoveAt(randomSpot);
                }
            }
        </div>
        <div class="team team-a row text-center ">
            @foreach (var player in teamA)
            {
                <div class="player-container
                        @if (player.Id == match.Admin){@("match-admin")}"
                        id="@player.Id">
                    <div class="player">
                        <a class="player-link" href="@player.steaumUrl" target="_blank">
                            <img class="account-image" src="@player.avatar" />
                        </a>
                    </div>
                    <a class="player-link" href="@player.steaumUrl" target="_blank">
                        <h3 class="username">@Html.DisplayFor(modelItem => player.steamUsername)</h3>
                    </a>
                    @if (User.Identity.IsAuthenticated)
                    {
                        if (Guid.Parse(uManager.GetUserId(User)) == match.Admin)
                        {
                            <div class='add-roles'>
                                <a class='add-role adminfy' player-id="@player.Id">Adminify</a>
                                <a class='add-role kick' player-id="@player.Id">Kickify</a>
                            </div>
                        }
                    }

                </div>
            }
        </div>
        <div class="team team-b row text-center ">
            @foreach (var player in teamB)
            {
                <div class="player-container
                        @if (player.Id == match.Admin){@("match-admin")}"
                        id="@player.Id">
                    <div class="player">
                        <a class="player-link" href="@player.steaumUrl" target="_blank">
                            <img class="account-image" src="@player.avatar" />
                        </a>
                    </div>
                    <a class="player-link" href="@player.steaumUrl" target="_blank">
                        <h3 class="username">@Html.DisplayFor(modelItem => player.steamUsername)</h3>
                    </a>
                    @if (User.Identity.IsAuthenticated)
                    {
                        if (Guid.Parse(uManager.GetUserId(User)) == match.Admin)
                        {
                            <div class='add-roles'>
                                <a class='add-role adminfy' player-id="@player.Id">Adminify</a>
                                <a class='add-role kick' player-id="@player.Id">Kickify</a>
                            </div>
                        }
                    }

                </div>
            }
        </div>
    </div>
}
else
{
    <div match-id="@match.id" class="row text-center match-container" style="background-image: url('/img/maps/@(match.Map).png');">
        <div class="match-header">
            <h3>@Html.DisplayFor(modelItem => match.Map) - <span class="match-player-count">@Html.DisplayFor(modelItem => match.Players.Count)</span> / 10</h3>
            @if (User.Identity.IsAuthenticated)
            {
                var curUser = uManager.GetUserId(User);
                if (match.Players.Where(p => p.Id == Guid.Parse(curUser)).Count() == 0)
                {
                    <button class="join-match btn">Join Match</button>
                }
                else if (match.Players.Count == 10)
                {
                    <button class="full-game btn">Game is Full</button>
                }
                else
                {
                    <button class="leave-match btn">Leave Match</button>
                }
                if (Guid.Parse(uManager.GetUserId(User)) == match.Admin)
                {
                    <button class="end-match btn">End Match</button>
                }
            }
        </div>
        <div class="curPlayers row text-center ">
            @foreach (var player in match.Players)
            {
                await Html.RenderPartialAsync("_PlayerPartial", player,
                    new ViewDataDictionary(ViewData)
                    {
                            { "matchAdmin", match.Admin }
                    });
            }
        </div>
    </div>
}
    